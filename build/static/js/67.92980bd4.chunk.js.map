{"version":3,"sources":["../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js","views/apps/userchat/ChatSidebar.js","views/apps/userchat/ChatLog.js","views/apps/userchat/receiverProfile.js","views/apps/userchat/UserSidebar.js","views/apps/userchat/ChatList.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/FormGroup.js","redux/actions/chat/index.js"],"names":["defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","props","_this","call","this","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","width","sidebar","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","className","rootClassName","style","root","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","React","createElement","sidebarClassName","ref","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","children","Component","defaultProps","defineProperty","module","exports","target","i","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","__esModule","ChatSidebar","chatsContacts","contacts","messages","status","value","getChatContents","getChats","getContactChats","handleOnChange","e","searchContacts","chat","chatContacts","chats","contactsArr","filteredContacts","chatsArr","filteredChats","renderContacts","map","contact","uid","handleActiveChat","markSeenAllMessages","mainSidebar","src","photoURL","alt","displayName","height","about","renderChats","Array","isArray","lastMsg","msg","slice","lastMsgDate","Date","time","lastMsgMonth","toLocaleString","month","lastMsgDay","getDate","pendingMsg","isSeen","isSent","activeID","undefined","activeChatID","textContent","Badge","color","pill","Card","size","handleUserSidebar","userImg","FormGroup","Input","type","placeholder","onChange","options","wheelPropagation","connect","chatApp","ChatLog","activeUser","activeChat","handleSendMessage","isPinned","text","sendMessage","handleTime","time_to","time_from","date_time_to","parse","date_time_from","getFullYear","getMonth","scrollToBottom","chatContainer","ReactDOM","findDOMNode","chatArea","scrollTop","scrollHeight","activeUserUid","Fragment","renderSentTime","mql","matches","handleReceiverSidebar","togglePinned","stroke","el","onSubmit","preventDefault","Button","ReceiverProfile","receiverProfile","UserSidebar","userProfile","name","rows","maxLength","label","defaultChecked","changeStatus","matchMedia","ChatList","sidebarDocked","sidebarOpen","userSidebar","user","onSetSidebarOpen","mediaQueryChanged","addListener","removeListener","Consumer","context","direction","_excluded","propTypes","PropTypes","string","oneOfType","number","bsSize","valid","bool","invalid","tag","tagPropType","innerRef","object","func","plaintext","addon","cssModule","_React$Component","getRef","focus","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","warnOnce","classes","mapToCssModules","classNames","_extends","row","check","inline","disabled","dispatch","axios","get","then","response","data","catch","err","console","log","post","contactId","newMsg","toString","message","query"],"mappings":"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","file":"static/js/67.92980bd4.chunk.js","sourcesContent":["import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty.js\");\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import React from \"react\"\r\nimport { Card, FormGroup, Input, Badge } from \"reactstrap\"\r\nimport { X, Search } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getChats,\r\n  getContactChats,\r\n  searchContacts,\r\n  markSeenAllMessages\r\n} from \"../../../redux/actions/chat/index\"\r\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\r\n\r\nclass ChatSidebar extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.chat.chatContacts.length !== state.chatContacts ||\r\n      props.chat.contacts.length !== state.contacts ||\r\n      props.chat.chats.length !== state.chats ||\r\n      props.chat.status !== state.status\r\n    ) {\r\n      return {\r\n        chatsContacts: props.chat.chatContacts,\r\n        contacts: props.chat.contacts,\r\n        chats: props.chat.chats,\r\n        status: props.chat.status\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    chatsContacts: [],\r\n    contacts: [],\r\n    messages: [],\r\n    status: null,\r\n    value: \"\"\r\n  }\r\n\r\n  getChatContents = () => {\r\n    this.props.getChats()\r\n    this.props.getContactChats()\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getChatContents()\r\n    this.setState({\r\n      chatsContacts: this.props.chat.chatContacts,\r\n      contacts: this.props.chat.contacts,\r\n      chats: this.props.chat.chats,\r\n      status: this.props.chat.status\r\n    })\r\n  }\r\n\r\n  handleOnChange = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchContacts(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const { contacts, chatsContacts, chats, status, value } = this.state\r\n    const contactsArr = value.length\r\n      ? this.props.chat.filteredContacts\r\n      : contacts\r\n    const chatsArr = value.length\r\n      ? this.props.chat.filteredChats\r\n      : chatsContacts\r\n    let renderContacts =\r\n      contactsArr.length > 0\r\n        ? contactsArr.map(contact => (\r\n            <li\r\n              key={contact.uid}\r\n              onClick={() => {\r\n                this.props.handleActiveChat(\r\n                  contact.uid,\r\n                  contact,\r\n                  chats[contact.uid]\r\n                )\r\n                this.props.markSeenAllMessages(contact.uid)\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              <div className=\"pr-1\">\r\n                <span className=\"avatar avatar-md m-0\">\r\n                  <img\r\n                    src={contact.photoURL}\r\n                    alt={contact.displayName}\r\n                    height=\"38\"\r\n                    width=\"38\"\r\n                  />\r\n                </span>\r\n              </div>\r\n              <div className=\"user-chat-info\">\r\n                <div className=\"contact-info\">\r\n                  <h5 className=\"text-bold-600 mb-0\">{contact.displayName}</h5>\r\n                  <p className=\"truncate\">{contact.about}</p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))\r\n        : null\r\n    let renderChats =\r\n      chatsArr && Array.isArray(chatsArr)\r\n        ? chatsArr.map(chat => {\r\n            let lastMsg =\r\n                chats[chat.uid] && chats[chat.uid].msg\r\n                  ? chats[chat.uid].msg.slice(-1)[0]\r\n                  : null,\r\n              lastMsgDate = new Date(\r\n                lastMsg && lastMsg.time ? lastMsg.time : null\r\n              ),\r\n              lastMsgMonth = lastMsgDate.toLocaleString(\"default\", {\r\n                month: \"short\"\r\n              }),\r\n              lastMsgDay = lastMsgDate.getDate()\r\n            let pendingMsg =\r\n              chats[chat.uid] && chats[chat.uid].msg\r\n                ? chats[chat.uid].msg.filter(\r\n                    i => i.isSeen === false && i.isSent !== true\r\n                  ).length\r\n                : null\r\n            let activeID =\r\n              chats[chat.uid] !== undefined ? chats[chat.uid] : null\r\n            return (\r\n              <li\r\n                key={chat.uid}\r\n                onClick={() => {\r\n                  this.props.handleActiveChat(chat.uid, chat, activeID)\r\n                  this.props.mainSidebar(false)\r\n                  this.props.markSeenAllMessages(chat.uid)\r\n                }}\r\n                className={`${\r\n                  this.props.activeChatID === chat.uid ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <div className=\"pr-1\">\r\n                  <span className=\"avatar avatar-md m-0\">\r\n                    <img\r\n                      src={chat.photoURL}\r\n                      alt={chat.displayName}\r\n                      height=\"38\"\r\n                      width=\"38\"\r\n                    />\r\n                  </span>\r\n                </div>\r\n                <div className=\"user-chat-info\">\r\n                  <div className=\"contact-info\">\r\n                    <h5 className=\"text-bold-600 mb-0\">{chat.displayName}</h5>\r\n                    <p className=\"truncate\">\r\n                      {lastMsg ? lastMsg.textContent : chat.about}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"contact-meta d-flex- flex-column\">\r\n                    <span className=\"float-right mb-25\">\r\n                      {lastMsgMonth + \" \" + lastMsgDay}\r\n                    </span>\r\n                    {pendingMsg > 0 ? (\r\n                      <div className=\"unseen-msg\">\r\n                        <Badge\r\n                          className=\"badge-md float-right\"\r\n                          color=\"primary\"\r\n                          pill\r\n                        >\r\n                          {pendingMsg}\r\n                        </Badge>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            )\r\n          })\r\n        : null\r\n    return (\r\n      <Card className=\"sidebar-content h-100\">\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"chat-fixed-search\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <div className=\"sidebar-profile-toggle position-relative d-inline-flex\">\r\n              <div\r\n                className=\"avatar\"\r\n                onClick={() => this.props.handleUserSidebar(\"open\")}\r\n              >\r\n                <img src={userImg} alt=\"User Profile\" height=\"40\" width=\"40\" />\r\n                <span\r\n                  className={\r\n                    status === \"dnd\"\r\n                      ? \"avatar-status-busy\"\r\n                      : status === \"away\"\r\n                      ? \"avatar-status-away\"\r\n                      : status === \"offline\"\r\n                      ? \"avatar-status-offline\"\r\n                      : \"avatar-status-online\"\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <FormGroup className=\"position-relative has-icon-left mx-1 my-0 w-100\">\r\n              <Input\r\n                className=\"round\"\r\n                type=\"text\"\r\n                placeholder=\"Search contact or start a new chat\"\r\n                onChange={e => this.handleOnChange(e)}\r\n                value={value}\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Search size={15} />\r\n              </div>\r\n            </FormGroup>\r\n          </div>\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"chat-user-list list-group\"\r\n          options={{\r\n            wheelPropagation: false\r\n          }}\r\n        >\r\n          <h3 className=\"primary p-1 mb-0\">Chats</h3>\r\n          <ul className=\"chat-users-list-wrapper media-list\">{renderChats}</ul>\r\n          <h3 className=\"primary p-1 mb-0\">Contacts</h3>\r\n          <ul className=\"chat-users-list-wrapper media-list\">\r\n            {renderContacts}\r\n          </ul>\r\n        </PerfectScrollbar>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chat: state.chatApp.chats\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getChats,\r\n  getContactChats,\r\n  searchContacts,\r\n  markSeenAllMessages\r\n})(ChatSidebar)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Input, Button } from \"reactstrap\"\r\nimport { MessageSquare, Menu, Star, Send } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport { togglePinned, sendMessage } from \"../../../redux/actions/chat/index\"\r\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\r\n\r\nclass ChatLog extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.activeUser !== state.activeChat ||\r\n      props.activeChat !== state.activeChat\r\n    ) {\r\n      return {\r\n        activeUser: props.activeUser,\r\n        activeChat: props.activeChat\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    msg: \"\",\r\n    activeUser: null,\r\n    activeChat: null\r\n  }\r\n\r\n  handleSendMessage = (id, isPinned, text) => {\r\n    if (text.length > 0) {\r\n      this.props.sendMessage(id, isPinned, text)\r\n      this.setState({\r\n        msg: \"\"\r\n      })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.scrollToBottom()\r\n  }\r\n  componentDidUpdate() {\r\n    this.scrollToBottom()\r\n  }\r\n\r\n  handleTime = (time_to, time_from) => {\r\n    const date_time_to = new Date(Date.parse(time_to))\r\n    const date_time_from = new Date(Date.parse(time_from))\r\n    return (\r\n      date_time_to.getFullYear() === date_time_from.getFullYear() &&\r\n      date_time_to.getMonth() === date_time_from.getMonth() &&\r\n      date_time_to.getDate() === date_time_from.getDate()\r\n    )\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    const chatContainer = ReactDOM.findDOMNode(this.chatArea)\r\n    chatContainer.scrollTop = chatContainer.scrollHeight\r\n  }\r\n\r\n  render() {\r\n    const { activeUser } = this.state\r\n    let activeUserUid = activeUser && activeUser.uid ? activeUser.uid : null,\r\n      activeChat =\r\n        activeUser && activeUser.uid\r\n          ? this.props.chat.chats[activeUserUid]\r\n          : null\r\n\r\n    let renderChats =\r\n      activeChat && activeChat !== undefined && activeChat.msg\r\n        ? activeChat.msg.map((chat, i) => {\r\n            let renderSentTime = () => {\r\n              if (\r\n                i > 0 &&\r\n                !this.handleTime(chat.time, activeChat.msg[i - 1].time)\r\n              ) {\r\n                return (\r\n                  <div className=\"divider\">\r\n                    <div className=\"divider-text\">\r\n                      {new Date().getDate() +\r\n                        \" \" +\r\n                        new Date().toLocaleString(\"default\", {\r\n                          month: \"short\"\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            }\r\n            let renderAvatar = () => {\r\n              if (i > 0) {\r\n                if (\r\n                  chat.isSent === true &&\r\n                  activeChat.msg[i - 1].isSent !== true\r\n                ) {\r\n                  return (\r\n                    <div className=\"chat-avatar\">\r\n                      <div className=\"avatar m-0\">\r\n                        <img\r\n                          src={userImg}\r\n                          alt=\"chat avatar\"\r\n                          height=\"40\"\r\n                          width=\"40\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                } else if (chat.isSent !== true) {\r\n                  return (\r\n                    <div className=\"chat-avatar\">\r\n                      <div className=\"avatar m-0\">\r\n                        <img\r\n                          src={activeUser.photoURL}\r\n                          alt=\"chat avatar\"\r\n                          height=\"40\"\r\n                          width=\"40\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                } else {\r\n                  return \"\"\r\n                }\r\n              } else {\r\n                return (\r\n                  <div className=\"chat-avatar\">\r\n                    <div className=\"avatar m-0\">\r\n                      <img\r\n                        src={chat.isSent ? userImg : activeUser.photoURL}\r\n                        alt=\"chat avatar\"\r\n                        height=\"40\"\r\n                        width=\"40\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            }\r\n            return (\r\n              <React.Fragment key={i}>\r\n                {renderSentTime()}\r\n                <div\r\n                  className={`chat ${\r\n                    chat.isSent !== true ? \"chat-left\" : \"chat-right\"\r\n                  }`}>\r\n                  {renderAvatar()}\r\n                  <div className=\"chat-body\">\r\n                    <div className=\"chat-content\">{chat.textContent}</div>\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )\r\n          })\r\n        : null\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"chat-app-window\">\r\n          <div\r\n            className={`start-chat-area ${\r\n              activeUser !== null ? \"d-none\" : \"d-flex\"\r\n            }`}>\r\n            <span className=\"mb-1 start-chat-icon\">\r\n              <MessageSquare size={50} />\r\n            </span>\r\n            <h4\r\n              className=\"py-50 px-1 sidebar-toggle start-chat-text\"\r\n              onClick={() => {\r\n                if (this.props.mql.matches === false) {\r\n                  this.props.mainSidebar(true)\r\n                } else {\r\n                  return null\r\n                }\r\n              }}>\r\n              Start Conversation\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className={`active-chat ${\r\n              activeUser === null ? \"d-none\" : \"d-block\"\r\n            }`}>\r\n            <div className=\"chat_navbar\">\r\n              <header className=\"chat_header d-flex justify-content-between align-items-center p-1\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <div\r\n                    className=\"sidebar-toggle d-block d-lg-none mr-1\"\r\n                    onClick={() => this.props.mainSidebar(true)}>\r\n                    <Menu size={24} />\r\n                  </div>\r\n                  <div\r\n                    className=\"avatar user-profile-toggle m-0 m-0 mr-1\"\r\n                    onClick={() => this.props.handleReceiverSidebar(\"open\")}>\r\n                    <img\r\n                      src={activeUser !== null ? activeUser.photoURL : \"\"}\r\n                      alt={activeUser !== null ? activeUser.displayName : \"\"}\r\n                      height=\"40\"\r\n                      width=\"40\"\r\n                    />\r\n                    <span\r\n                      className={`\r\n                    ${\r\n                      activeUser !== null &&\r\n                      activeUser.status === \"do not disturb\"\r\n                        ? \"avatar-status-busy\"\r\n                        : activeUser !== null && activeUser.status === \"away\"\r\n                        ? \"avatar-status-away\"\r\n                        : activeUser !== null && activeUser.status === \"offline\"\r\n                        ? \"avatar-status-offline\"\r\n                        : \"avatar-status-online\"\r\n                    }\r\n                    `}\r\n                    />\r\n                  </div>\r\n                  <h6 className=\"mb-0\">\r\n                    {activeUser !== null ? activeUser.displayName : \"\"}\r\n                  </h6>\r\n                </div>\r\n                <span\r\n                  className=\"favorite\"\r\n                  onClick={() => {\r\n                    if (activeChat) {\r\n                      this.props.togglePinned(\r\n                        activeUser.uid,\r\n                        !activeChat.isPinned\r\n                      )\r\n                    }\r\n                  }}>\r\n                  <Star\r\n                    size={22}\r\n                    stroke={\r\n                      activeChat && activeChat.isPinned === true\r\n                        ? \"#FF9F43\"\r\n                        : \"#626262\"\r\n                    }\r\n                  />\r\n                </span>\r\n              </header>\r\n            </div>\r\n            <PerfectScrollbar\r\n              className=\"user-chats\"\r\n              options={{\r\n                wheelPropagation: false\r\n              }}\r\n              ref={el => {\r\n                this.chatArea = el\r\n              }}>\r\n              <div className=\"chats\">{renderChats}</div>\r\n            </PerfectScrollbar>\r\n            <div className=\"chat-app-form\">\r\n              <form\r\n                className=\"chat-app-input d-flex align-items-center\"\r\n                onSubmit={e => {\r\n                  e.preventDefault()\r\n                  this.handleSendMessage(\r\n                    activeUser.uid,\r\n                    false,\r\n                    this.state.msg,\r\n                    activeUser\r\n                  )\r\n                }}>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"message mr-1 ml-50\"\r\n                  placeholder=\"Type your message\"\r\n                  value={this.state.msg}\r\n                  onChange={e => {\r\n                    e.preventDefault()\r\n                    this.setState({\r\n                      msg: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n                <Button color=\"primary\">\r\n                  <Send className=\"d-lg-none\" size={15} />\r\n                  <span className=\"d-lg-block d-none\">Send</span>\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chat: state.chatApp.chats\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { togglePinned, sendMessage })(ChatLog)\r\n","import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nclass ReceiverProfile extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.activeUser !== state.activeUser) {\r\n      return {\r\n        activeUser: props.activeUser\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    activeUser: null\r\n  }\r\n\r\n  render() {\r\n    const { activeUser } = this.state\r\n    return (\r\n      <div\r\n        className={`user-profile-sidebar ${\r\n          this.props.receiverProfile ? \"show\" : null\r\n        }`}\r\n      >\r\n        <header className=\"user-profile-header\">\r\n          <span\r\n            className=\"close-icon\"\r\n            onClick={() => this.props.handleReceiverSidebar(\"close\")}\r\n          >\r\n            <X size={24} />\r\n          </span>\r\n          <div className=\"header-profile-sidebar\">\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={activeUser !== null ? activeUser.photoURL : null}\r\n                alt={activeUser !== null ? activeUser.displayName : null}\r\n                height=\"66\"\r\n                width=\"66\"\r\n              />\r\n              <span\r\n                className={`${\r\n                  activeUser !== null && activeUser.status === \"do not disturb\"\r\n                    ? \"avatar-status-busy\"\r\n                    : activeUser !== null && activeUser.status === \"away\"\r\n                    ? \"avatar-status-away\"\r\n                    : activeUser !== null && activeUser.status === \"offline\"\r\n                    ? \"avatar-status-offline\"\r\n                    : \"avatar-status-online\"\r\n                } avatar-status-lg`}\r\n              />\r\n            </div>\r\n            <h4 className=\"chat-user-name\">\r\n              {activeUser !== null ? activeUser.displayName : null}\r\n            </h4>\r\n          </div>\r\n        </header>\r\n        <PerfectScrollbar\r\n          className=\"user-profile-sidebar-area p-2\"\r\n          options={{\r\n            wheelPropagation: false\r\n          }}\r\n        >\r\n          <h6>About</h6>\r\n          <p>{activeUser !== null ? activeUser.about : null}</p>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ReceiverProfile\r\n","import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nimport { Input } from \"reactstrap\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeStatus } from \"../../../redux/actions/chat/index\"\r\nimport Radio from \"../../../components/@vuexy/radio/RadioVuexy\"\r\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\r\nclass UserSidebar extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.chat.status !== state.status) {\r\n      return {\r\n        status: props.chat.status\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n  state = {\r\n    value:\r\n      \"Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.\",\r\n    status: null\r\n  }\r\n\r\n  render() {\r\n    const status = this.state.status\r\n    return (\r\n      <div\r\n        className={`chat-profile-sidebar ${\r\n          this.props.userProfile ? \"show\" : null\r\n        }`}\r\n      >\r\n        <header className=\"chat-profile-header\">\r\n          <div\r\n            className=\"close-icon\"\r\n            onClick={() => this.props.handleUserSidebar(\"close\")}\r\n          >\r\n            <X size={24} />\r\n          </div>\r\n          <div className=\"header-profile-sidebar\">\r\n            <div className=\"avatar\">\r\n              <img src={userImg} alt=\"User Profile\" height=\"66\" width=\"66\" />\r\n              <span\r\n                className={`${\r\n                  status === \"offline\"\r\n                    ? \"avatar-status-offline\"\r\n                    : status === \"dnd\"\r\n                    ? \"avatar-status-busy\"\r\n                    : status === \"away\"\r\n                    ? \"avatar-status-away\"\r\n                    : \"avatar-status-online\"\r\n                } avatar-status-lg`}\r\n              />\r\n            </div>\r\n            <h4 className=\"chat-user-name\">John Doe</h4>\r\n          </div>\r\n        </header>\r\n        <div className=\"profile-sidebar-area\">\r\n          <PerfectScrollbar\r\n            className=\"scroll-area\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <h6>About</h6>\r\n            <div className=\"about-user\">\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"text\"\r\n                id=\"userAbout\"\r\n                rows=\"5\"\r\n                value={this.state.value}\r\n                maxLength=\"120\"\r\n                onChange={e => this.setState({ value: e.target.value })}\r\n              />\r\n              <small className=\"counter-value float-right\">\r\n                {`${this.state.value.length} / 120`}\r\n              </small>\r\n            </div>\r\n            <h3 className=\"mt-3\">Status</h3>\r\n            <ul className=\"list-unstyled user-status mb-0\">\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Active\"\r\n                  color=\"success\"\r\n                  defaultChecked={true}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"active\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Do Not Disturb\"\r\n                  color=\"danger\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"dnd\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Away\"\r\n                  color=\"warning\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"away\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Offline\"\r\n                  color=\"secondary\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"offline\")}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chat: state.chatApp.chats\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { changeStatus })(UserSidebar)\r\n","import React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport ChatSidebarContent from \"./ChatSidebar\";\r\nimport ChatLog from \"./ChatLog\";\r\nimport ReceiverSidebar from \"./receiverProfile\";\r\nimport UserSidebar from \"./UserSidebar\";\r\nimport \"../../../assets/scss/pages/app-chat.scss\";\r\nconst mql = window.matchMedia(`(min-width: 992px)`);\r\n\r\nclass ChatList extends React.Component {\r\n  state = {\r\n    userProfile: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    activeChatID: null,\r\n    activeChat: null,\r\n    activeUser: null,\r\n    receiverProfile: false,\r\n    userSidebar: false,\r\n  };\r\n  // mounted = false\r\n  handleUserSidebar = (status) => {\r\n    if (status === \"open\") {\r\n      this.setState({\r\n        userProfile: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        userProfile: false,\r\n      });\r\n    }\r\n  };\r\n  handleActiveChat = (id, user, chats) => {\r\n    this.setState({\r\n      activeChatID: id,\r\n      activeUser: user,\r\n      activeChat: chats,\r\n    });\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged);\r\n  }\r\n\r\n  onSetSidebarOpen = (open) => {\r\n    this.setState({ sidebarOpen: open });\r\n  };\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false });\r\n  };\r\n\r\n  handleReceiverSidebar = (status) => {\r\n    status === \"open\"\r\n      ? this.setState({\r\n          receiverProfile: true,\r\n        })\r\n      : this.setState({\r\n          receiverProfile: false,\r\n        });\r\n  };\r\n\r\n  handleUserSidebar = (status) => {\r\n    status === \"open\"\r\n      ? this.setState({\r\n          userSidebar: true,\r\n        })\r\n      : this.setState({\r\n          userSidebar: false,\r\n        });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat-application position-relative\">\r\n        <div\r\n          className={`chat-overlay ${\r\n            this.state.receiverProfile ||\r\n            this.state.userSidebar ||\r\n            this.state.sidebarOpen\r\n              ? \"show\"\r\n              : \"d-none\"\r\n          }`}\r\n          onClick={() => {\r\n            this.handleReceiverSidebar(\"close\");\r\n            this.handleUserSidebar(\"close\");\r\n            this.onSetSidebarOpen(false);\r\n          }}\r\n        />\r\n        <ContextLayout.Consumer>\r\n          {(context) => (\r\n            <Sidebar\r\n              sidebar={\r\n                <ChatSidebarContent\r\n                  activeChatID={this.state.activeChatID}\r\n                  handleActiveChat={this.handleActiveChat}\r\n                  handleUserSidebar={this.handleUserSidebar}\r\n                  mainSidebar={this.onSetSidebarOpen}\r\n                />\r\n              }\r\n              docked={this.state.sidebarDocked}\r\n              open={this.state.sidebarOpen}\r\n              touch={false}\r\n              sidebarClassName=\"chat-sidebar\"\r\n              contentClassName=\"sidebar-children d-none\"\r\n              pullRight={context.state.direction === \"rtl\"}\r\n            >\r\n              \"\"\r\n            </Sidebar>\r\n          )}\r\n        </ContextLayout.Consumer>\r\n        <UserSidebar\r\n          userProfile={this.state.userSidebar}\r\n          handleUserSidebar={this.handleUserSidebar}\r\n        />\r\n        <ChatLog\r\n          activeChat={this.state.activeChat}\r\n          activeUser={this.state.activeUser}\r\n          handleReceiverSidebar={this.handleReceiverSidebar}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          mql={mql}\r\n          handleActiveChat={this.handleActiveChat}\r\n        />\r\n        <ReceiverSidebar\r\n          activeUser={this.state.activeUser}\r\n          receiverProfile={this.state.receiverProfile}\r\n          handleReceiverSidebar={this.handleReceiverSidebar}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatList;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import axios from \"axios\"\r\n\r\nexport const getChats = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"api/app/chat/chats\")\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"GET_CONTACTS\",\r\n          contacts: response.data.contacts,\r\n          chats: response.data.chats\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getContactChats = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"api/app/chat/chat-contacts\")\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"GET_CHAT_CONTACTS\",\r\n          chats: response.data\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const togglePinned = (id, value) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/apps/chat/set-pinned/\", {\r\n        contactId: id,\r\n        value\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"SET_PINNED\",\r\n          id,\r\n          value\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const sendMessage = (id, isPinned, text) => {\r\n  if (text.length > 0) {\r\n    return dispatch => {\r\n      let newMsg = {\r\n        textContent: text,\r\n        isSent: true,\r\n        isSeen: false,\r\n        time: new Date().toString()\r\n      }\r\n      axios\r\n        .post(\"/api/app/chat/send-message\", {\r\n          contactId: id,\r\n          message: newMsg,\r\n          isPinned\r\n        })\r\n        .then(response => {\r\n          dispatch({\r\n            type: \"SEND_MESSAGE\",\r\n            msg: newMsg,\r\n            id,\r\n            isPinned,\r\n            text\r\n          })\r\n          dispatch(getChats())\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  } else {\r\n    return\r\n  }\r\n}\r\n\r\nexport const changeStatus = status => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"CHANGE_STATUS\",\r\n      status\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchContacts = query => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SEARCH_CONTACTS\",\r\n      query\r\n    })\r\n  }\r\n}\r\n\r\nexport const markSeenAllMessages = id => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/apps/chat/mark-all-seen/\", {\r\n        contactId: id\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"MARK_AS_SEEN\",\r\n          id\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n"],"sourceRoot":""}