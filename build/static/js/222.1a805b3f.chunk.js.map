{"version":3,"sources":["views/apps/products/AddProduct.js"],"names":["AddProduct","props","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","console","log","state","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","onChangeHandler","event","selectedFile","target","changeHandler1","e","status","value","changeHandler","name","submitHandler","preventDefault","axiosConfig","post","astroid","localStorage","getItem","product","category","price","mrp","then","message","swal","history","push","catch","blogImg","categoryList","productList","EditorState","createEmpty","prevState","prevProps","get","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","render","onClick","onSubmit","lg","md","sm","required","type","placeholder","onChange","map","catList","key","_id","proList","productname","Ripple","color","Component"],"mappings":"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","file":"static/js/222.1a805b3f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  CustomInput,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\n//import axios from \"axios\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n// import { useParams } from \"react-router-dom\";\r\n//import { ToastContainer, toast } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport Axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"../../../../src/assets/scss/pages/users.scss\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n// import \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\n\r\nexport class AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mrp: \"\",\r\n      category: \"\",\r\n      selectedFile: {},\r\n      blogImg: \"\",\r\n      product: \"\",\r\n      categoryList: [],\r\n      productList: [],\r\n      desc: \"\",\r\n      data: \"data\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n    console.log(\"descccc\", this.state.desc);\r\n  };\r\n  // onChangeHandler = (event) => {\r\n  //   this.setState({ selectedFile: event.target.files[0] });\r\n  //   this.setState({ selectedName: event.target.files[0].name });\r\n  //   console.log(event.target.files[0]);\r\n  // };\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n      xhr.setRequestHeader(\"Authorization\", \"Client-ID 7e1c3e366d22aa3\");\r\n      const data = new FormData();\r\n      data.append(\"image\", file);\r\n      xhr.send(data);\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        resolve(response);\r\n      });\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    });\r\n  };\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.file[0] });\r\n    // this.setState({ selectedName: event.target.files.name });\r\n    console.log(event.target.file[0]);\r\n  };\r\n  componentDidUpdate(prevState, prevProps) {\r\n    console.log(prevState);\r\n    console.log(prevProps);\r\n    // console.log(this.state.category);\r\n\r\n    // if (this.state.category) {\r\n    axiosConfig\r\n      .get(`/user/productbycategory/${this.state.category}`)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        this.setState({ productList: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.category);\r\n    axiosConfig\r\n      .get(`/admin/getproductcalegory`)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        this.setState({ categoryList: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    axiosConfig\r\n      .post(`/user/add_astro_product`, {\r\n        astroid: localStorage.getItem(\"astroId\"),\r\n        product: this.state.product,\r\n        category: this.state.category,\r\n        price: this.state.mrp,\r\n        // desc: this.state.desc,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        if (response.data.message === \"success\") {\r\n          swal(\"\", \"Product Updated Successfully\");\r\n        }\r\n\r\n        this.props.history.push(\"/app/products/productlist\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Add Product\"\r\n          breadCrumbParent=\" Product Management\"\r\n          breadCrumbActive=\"Add Product\"\r\n        />\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Product\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/products/productlist\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Category Name</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"category\"\r\n                    placeholder=\"Enter Title\"\r\n                    value={this.state.category}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select.....</option>\r\n                    {this.state.categoryList?.map((catList) => (\r\n                      <option key={catList._id} value={catList._id}>\r\n                        {catList.name}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Product Name</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"product\"\r\n                    placeholder=\"Enter Title\"\r\n                    value={this.state.product}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select.....</option>\r\n                    {this.state.productList?.map((proList) => (\r\n                      <option key={proList._id} value={proList._id}>\r\n                        {proList.productname}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Selling Price(MRP)</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"mrp\"\r\n                    placeholder=\"Enter Price\"\r\n                    value={this.state.mrp}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n\r\n                {/* <Col lg=\"10\" md=\"10\" sm=\"10\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n                  <Editor\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      inline: { inDropdown: true },\r\n                      list: { inDropdown: true },\r\n                      textAlign: { inDropdown: true },\r\n                      link: { inDropdown: true },\r\n                      history: { inDropdown: true },\r\n                      // image: {\r\n                      //   uploadCallback: this.uploadImageCallBack,\r\n                      //   previewImage: true,\r\n                      //   alt: { present: true, mandatory: true },\r\n                      // },\r\n                    }}\r\n                  />\r\n                </Col> */}\r\n              </Row>\r\n              {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label className=\"mb-1\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => this.changeHandler1(e)}\r\n                >\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Inactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                </div>\r\n              </Col> */}\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-1 mt-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Save\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddProduct;\r\n"],"sourceRoot":""}