{"version":3,"sources":["views/apps/products/ProductList.js"],"names":["i","ProductList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","product","productname","src","image","alt","className","category","name","price","ReactHtmlParser","desc","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","astroId","localStorage","getItem","axiosConfig","get","then","response","console","log","id","error","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","render","history","push","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/179.a02367e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass ProductList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Product Name\",\r\n        field: \"product?.productname\",\r\n        filter: true,\r\n        width: 130,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.product?.productname}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Thumbnail Image\",\r\n        field: \"product?.image[0]\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <img\r\n                src={params.data.product?.image[0]}\r\n                alt=\"img\"\r\n                className=\"w-50 h-50 rounded-0\"\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Category Name\",\r\n        field: \"category?.name\",\r\n        filter: true,\r\n        width: 180,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.category?.name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Selling Price\",\r\n        field: \"price\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.price}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Desc\",\r\n        field: \"desc\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{ReactHtmlParser(params.data?.desc)}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Action\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/userride/viewUserRide/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/productmanager/editproduct\")\r\n                    }\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    let astroId = localStorage.getItem(\"astroId\");\r\n    await axiosConfig.get(`/user/productlist/${astroId}`).then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/admin/del_astro_product/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Products\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"Products\"\r\n        />\r\n\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Product List\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\" btn btn-success float-right\"\r\n                        onClick={() => history.push(\"/app/products/addproduct\")}\r\n                      >\r\n                        Add New\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProductList;\r\n"],"sourceRoot":""}