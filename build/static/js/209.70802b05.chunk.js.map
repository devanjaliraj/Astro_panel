{"version":3,"sources":["views/apps/astrochat/YourliveStream.js"],"names":["YourliveStream","useState","videoCall","setVideoCall","liveid","setliveId","channelNamecreated","setchannelName","Status","setStatus","Token","setToken","Addcall","livestraming","setlivestraming","rtcProps","appId","channel","enableVideo","token","localStorage","getItem","uid","role","useEffect","handlePopstate","window","history","pushState","location","pathname","addEventListener","removeEventListener","callbacks","EndCall","axiosConfig","get","then","res","console","log","data","catch","err","response","className","lg","md","sm","onClick","e","preventDefault","payload","astroAccount","status","post","msg","_id","setItem","channelName","message","removeItem","handlestatus","color","check","value","target","name","type","liveidnew","replace","handleofflinestreaming","style","display","width","height"],"mappings":"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","file":"static/js/209.70802b05.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport AgoraUIKit from \"agora-react-uikit\";\r\n\r\nimport \"./../../../assets/scss/video.scss\";\r\nimport Customvideo from \"./Customvideo\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport VideoCalls from \"./VideoCalls\";\r\n\r\nfunction YourliveStream() {\r\n  const [videoCall, setVideoCall] = useState(false);\r\n  const [liveid, setliveId] = useState(\"\");\r\n  const [channelNamecreated, setchannelName] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [Token, setToken] = useState(\"\");\r\n  const [Addcall, setAddcall] = useState(false);\r\n  const [livestraming, setlivestraming] = useState(false);\r\n\r\n  const [view, setview] = useState(false);\r\n  const [listofchannel, setlistofchannel] = useState();\r\n\r\n  const rtcProps = {\r\n    // Pass your App ID here.\r\n    appId: \"7d1f07c76f9d46be86bc46a791884023\",\r\n    // Set the channel name.\r\n    channel: channelNamecreated,\r\n    enableVideo: true,\r\n\r\n    // Pass your temp token here.\r\n    token: Token || localStorage.getItem(\"astrotokenforlivestream\"),\r\n    // token:\r\n    //   \"007eJxTYEg1WKq8YNrZq7Hry+t1pN+/dWLIDZotUv3YuP3lGv0TjsIKDOYphmkG5snmZmmWKSZmSakWZknJJmaJ5paGFhYmBkbGfocSUxoCGRmC7M+xMjJAIIjPzpCYV5qVWpzBwAAAcZYfjg==\",\r\n    // token: Token || localStorage.getItem(\"astrotokenforvideocall\"),\r\n\r\n    // Set the user ID.\r\n    uid: 0,\r\n    // Set the user role\r\n    role: \"host\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handlePopstate = () => {\r\n      // Push a new state to the history to keep the user on the current page\r\n      window.history.pushState(null, null, window.location.pathname);\r\n    };\r\n\r\n    // Add event listener to handle the popstate event\r\n    window.addEventListener(\"popstate\", handlePopstate);\r\n\r\n    return () => {\r\n      // Clean up the event listener when the component unmounts\r\n      window.removeEventListener(\"popstate\", handlePopstate);\r\n    };\r\n  }, []);\r\n\r\n  const callbacks = {\r\n    EndCall: () => {\r\n      setVideoCall(false);\r\n      // console.log(liveid);\r\n      const astroid = localStorage.getItem(\"astroId\");\r\n      axiosConfig\r\n        .get(`/user/disConnectLiveStream/${liveid}`)\r\n        .then((res) => {\r\n          // window.location. ();\r\n          console.log(res.data);\r\n          setlivestraming(false);\r\n\r\n          // localStorage.removeItem(\"astrotokenforlivestream\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n        });\r\n    },\r\n  };\r\n\r\n  const handlestatus = (e) => {\r\n    e.preventDefault();\r\n    const astroid = localStorage.getItem(\"astroId\");\r\n    // let payload = {\r\n    //   astroAccount: astroid,\r\n    // };\r\n    const payload = {\r\n      astroAccount: astroid,\r\n      status: true,\r\n    };\r\n\r\n    if (Status === \"Active\") {\r\n      axiosConfig\r\n        .post(`/user/astroLiveStreaming`, payload)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          if (res.data.msg === \"already exists\") {\r\n            setToken(res.data?.token);\r\n            setliveId(res.data?._id);\r\n            localStorage.setItem(\"liveid\", res.data?._id);\r\n            setchannelName(res.data?.channelName);\r\n            setlivestraming(true);\r\n          }\r\n          if (res.data?.message === \"success\") {\r\n            localStorage.setItem(\"liveid\", res.data?.data?._id);\r\n            setToken(res.data?.data?.token);\r\n            setchannelName(res.data?.data?.channelName);\r\n            setliveId(res.data?.data?._id);\r\n            setlivestraming(true);\r\n          }\r\n\r\n          localStorage.setItem(\r\n            \"astrotokenforlivestream\",\r\n            res.data?.data?.token\r\n          );\r\n          setVideoCall(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response?.data);\r\n        });\r\n    }\r\n    if (Status === \"Deactive\") {\r\n      localStorage.removeItem(\"astrotokenforlivestream\");\r\n      // setAddcall(true);\r\n    }\r\n  };\r\n\r\n  const handleofflinestreaming = () => {\r\n    const liveidnew = localStorage.getItem(\"liveid\");\r\n    console.log(liveidnew);\r\n    axiosConfig\r\n      .get(`/user/disConnectLiveStream/${liveidnew}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setlivestraming(false);\r\n        localStorage.removeItem(\"liveid\");\r\n        window.location.replace(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"m-0 livestream\">\r\n      <Card>\r\n        <Row>\r\n          {/* <VideoCalls /> */}\r\n          <Col lg=\"4\" md=\"4\" sm=\"4\">\r\n            <div className=\"container mt-2 mb-1\">\r\n              <Button onClick={(e) => handlestatus(e)} color=\"success\">\r\n                liveStreaming Now\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"container mt-1 mb-1\">\r\n              <Row>\r\n                {livestraming === false ? (\r\n                  <>\r\n                    <Col className=\"mt-1\">\r\n                      <FormGroup check>\r\n                        <Input\r\n                          value=\"Active\"\r\n                          onClick={(e) => {\r\n                            setStatus(e.target.value);\r\n                          }}\r\n                          name=\"radio1\"\r\n                          type=\"radio\"\r\n                        />{\" \"}\r\n                        <Label check>Online</Label>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </>\r\n                ) : null}\r\n\r\n                <Col className=\"mt-1\">\r\n                  <FormGroup check>\r\n                    <Input\r\n                      value=\"Deactive\"\r\n                      onClick={(e) => {\r\n                        setStatus(e.target.value);\r\n                        handleofflinestreaming();\r\n                        // setAddcall(true);\r\n                      }}\r\n                      name=\"radio1\"\r\n                      type=\"radio\"\r\n                    />{\" \"}\r\n                    <Label check>Offline</Label>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <div className=\"mt-1 mb-1\">\r\n            {videoCall && Status === \"Active\" ? (\r\n              <div style={{ display: \"flex\", width: \"100vw\", height: \"80vh\" }}>\r\n                <AgoraUIKit rtcProps={rtcProps} callbacks={callbacks} />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {Addcall === true ? (\r\n                  <>\r\n                    <Button onClick={() => setVideoCall(true)} color=\"success\">\r\n                      liveStreams Now\r\n                    </Button>\r\n                  </>\r\n                ) : null}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YourliveStream;\r\n"],"sourceRoot":""}