{"version":3,"sources":["views/apps/astrochat/Newtest.js","views/apps/astrochat/YourVideocall.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["AgoraRTC","createClient","mode","codec","YourVideocall","useState","videoCall","setVideoCall","channelNamecreated","setchannelName","Status","setStatus","Token","setToken","Addcall","setAddcall","rtcProps","appId","channel","token","localStorage","getItem","uid","role","callbacks","EndCall","window","location","reload","useEffect","astroid","console","log","axiosConfig","get","then","res","data","channelName","catch","err","Card","Row","Col","lg","md","sm","className","Button","onClick","e","preventDefault","payload","astroAccount","post","setItem","removeItem","handlestatus","color","FormGroup","check","Input","value","target","name","type","Label","style","display","width","height","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","children","node","hidden","for","tag","tagPropType","cssModule","object","xs","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","props","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","length","React","createElement","_extends","row","inline","disabled"],"mappings":"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","file":"static/js/102.d0164701.chunk.js","sourcesContent":["import AgoraRTC from \"agora-rtc-sdk-ng\";\r\n\r\nconst appId = \"7d1f07c76f9d46be86bc46a791884023\";\r\n\r\nexport const client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"h264\" });\r\n\r\nexport const join = async (channelName, token, userId) => {\r\n  await client.join(appId, channelName, token, userId);\r\n  const localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\r\n  const localVideoTrack = await AgoraRTC.createCameraVideoTrack();\r\n  localVideoTrack.play(\"local-stream\");\r\n  return [localAudioTrack, localVideoTrack];\r\n};\r\n\r\nexport const leave = async () => {\r\n  await client.leave();\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport AgoraUIKit from \"agora-react-uikit\";\r\n\r\nimport \"./../../../assets/scss/video.scss\";\r\nimport Customvideo from \"./Customvideo\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport VideoCalls from \"./VideoCalls\";\r\n\r\nfunction YourVideocall() {\r\n  const [videoCall, setVideoCall] = useState(false);\r\n  const [channelname, setchannel] = useState(\"\");\r\n  const [channelNamecreated, setchannelName] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [Token, setToken] = useState(\"\");\r\n  const [Addcall, setAddcall] = useState(false);\r\n\r\n  const [view, setview] = useState(false);\r\n  const [listofchannel, setlistofchannel] = useState();\r\n\r\n  const rtcProps = {\r\n    // Pass your App ID here.\r\n    appId: \"7d1f07c76f9d46be86bc46a791884023\",\r\n    // Set the channel name.\r\n    // channel: \"anujesh\",\r\n    channel: channelNamecreated,\r\n    // Pass your temp token here.\r\n    token: Token || localStorage.getItem(\"astrotokenforvideocall\"),\r\n    // token:\r\n    //   \"007eJxTYDgh+fefxobNlcqHuZiV5tUksPQsnbky8DLD45MxN08G9yxRYDBPMUwzME82N0uzTDExS0q1MEtKNjFLNLc0tLAwMTAyXn4pMqUhkJEh7PIBZkYGCATx2RkS80qzUoszGBgA59ghrA==\",\r\n    // token:\r\n    //   \"0067d1f07c76f9d46be86bc46a791884023IACziv5tFbYdCMOClwbRP0u01RUPp6MZ+nTKCno+eVh9/UlEne4AAAAAEADAxRILNW1bZAEAAQBVqFpk\",\r\n    // Set the user ID.\r\n    uid: 0,\r\n    // Set the user role\r\n    role: \"\",\r\n  };\r\n  const callbacks = {\r\n    EndCall: () => {\r\n      window.location.reload();\r\n      setVideoCall(false);\r\n    },\r\n  };\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   const astroid = localStorage.getItem(\"astroId\");\r\n\r\n  //   axiosConfig\r\n  //     .post(`/user/add_VideoChannel`, {\r\n  //       astroid: astroid,\r\n  //       channelName: channelname,\r\n  //     })\r\n  //     .then((res) => {\r\n  //       setchannel(\"\");\r\n  //       swal(\"Channel Created Successfully\");\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  const handlestatus = (e) => {\r\n    e.preventDefault();\r\n    const astroid = localStorage.getItem(\"astroId\");\r\n    console.log(astroid);\r\n    console.log(Status);\r\n    let payload = {\r\n      astroAccount: astroid,\r\n    };\r\n    if (Status === \"Active\") {\r\n      axiosConfig\r\n        .post(`/user/astroVideoCall`, payload)\r\n        .then((res) => {\r\n          console.log(res.data.astroAccount);\r\n          setToken(res.data.astroAccount);\r\n          localStorage.setItem(\"astrotokenforvideocall\", res.data.astroAccount);\r\n          setAddcall(true);\r\n\r\n          // setVideoCall(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    if (Status === \"Deactive\") {\r\n      localStorage.removeItem(\"astrotokenforvideocall\");\r\n      setAddcall(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const astroid = localStorage.getItem(\"astroId\");\r\n    console.log(astroid);\r\n\r\n    axiosConfig\r\n      // .get(`/user/getoneChannl/644fae265f6b65e11a4bdbd7`)\r\n      .get(`user/channelList/${astroid}`)\r\n      .then((res) => {\r\n        console.log(res.data?.data[0]?.channelName);\r\n        setchannelName(res.data?.data[0]?.channelName);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row>\r\n          {/* <VideoCalls /> */}\r\n          <Col lg=\"3\" md=\"3\" sm=\"3\">\r\n            <div className=\"container mt-2 mb-1\">\r\n              <Button onClick={(e) => handlestatus(e)} color=\"success\">\r\n                show yourSelf\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"container mt-1 mb-1\">\r\n              <FormGroup check>\r\n                <Input\r\n                  value=\"Active\"\r\n                  onClick={(e) => {\r\n                    setStatus(e.target.value);\r\n                  }}\r\n                  name=\"radio1\"\r\n                  type=\"radio\"\r\n                />{\" \"}\r\n                <Label check>Online</Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Input\r\n                  value=\"Deactive\"\r\n                  onClick={(e) => setStatus(e.target.value)}\r\n                  name=\"radio1\"\r\n                  type=\"radio\"\r\n                />{\" \"}\r\n                <Label check>Offline</Label>\r\n              </FormGroup>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <div className=\"container mt-1 mb-1\">\r\n            {videoCall && Status === \"Active\" ? (\r\n              <div style={{ display: \"flex\", width: \"75vw\", height: \"80vh\" }}>\r\n                <AgoraUIKit rtcProps={rtcProps} callbacks={callbacks} />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {Addcall === true ? (\r\n                  <>\r\n                    <Button onClick={() => setVideoCall(true)} color=\"success\">\r\n                      Add call\r\n                    </Button>\r\n                  </>\r\n                ) : null}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YourVideocall;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}