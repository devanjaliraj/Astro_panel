{"version":3,"sources":["views/apps/Uploads/UploadMain.js"],"names":["i","UploadMain","state","rowData","paginationPageSize","currenPageSize","getPageSize","gallary","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","file","includes","className","class","style","background","borderRadius","height","controls","src","type","alt","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","id","console","log","axiosConfig","get","then","res","catch","err","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","astroId","localStorage","getItem","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","render","history","push","tag","length","right","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/207.c39cc08f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../history\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass UploadMain extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    gallary: [],\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Image/Video\",\r\n        field: \"file\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          // console.log(params.data);\r\n          return (\r\n            <div>\r\n              {/* <span>{params.data.firstname}</span> */}\r\n              <span>\r\n                {params.data.file?.includes(\"mp4\") ? <>Video</> : <>Image</>}\r\n                {/* params?.data?.image?.length? \"Image\" : \"Video\" */}\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"View\",\r\n        field: \"image\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div class=\"\">\r\n                {params?.data.file?.includes(\"mp4\") ? (\r\n                  <>\r\n                    <div style={{ width: \"100%\" }} className=\"videogallry\">\r\n                      <video\r\n                        style={{\r\n                          width: \"100%\",\r\n                          background: \"none\",\r\n                          borderRadius: \"8px\",\r\n                        }}\r\n                        className=\"videosource\"\r\n                        width=\"50px\"\r\n                        height=\"60px\"\r\n                        controls\r\n                      >\r\n                        <source src={params?.data.file} type=\"video/mp4\" />\r\n                      </video>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div style={{ width: \"100px\" }} className=\"imagesize\">\r\n                      <img\r\n                        style={{\r\n                          borderRadius: \"8px\",\r\n                          width: \"90px\",\r\n                          height: \"38px\",\r\n                          background: \"none\",\r\n                        }}\r\n                        className=\"imagegallry\"\r\n                        // width={320}\r\n                        // height={250}\r\n                        src={params?.data.file}\r\n                        alt=\"gallryimg\"\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Mobile No.\",\r\n      //   field: \"mobile\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>params.data.userid?.mobile</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Gender\",\r\n      //   field: \"gender\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>params.data.gender</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"DOB\",\r\n      //   field: \"dob\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>params.data.dob</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Time\",\r\n      //   field: \"date_of_time\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>params.data.date_of_time</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Birth Place\",\r\n      //   field: \"birthPlace\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>params.data.birthPlace</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Birth Place\",\r\n      //   field: \"birthPlace\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>params.data.birthPlace</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"Marital Status\",\r\n      //   field: \"marital_status\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>params.data.marital_status</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Occupation\",\r\n      //   field: \"occupation\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>params.data.occupation</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Topic Of concern \",\r\n      //   field: \"topic_of_cnsrn\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>params.data.topic_of_cnsrn</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Your Topic Of concern \",\r\n      //   field: \"entertopic_of_cnsrn\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>params.data.entertopic_of_cnsrn</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      //   {\r\n      //     headerName: \"Status\",\r\n      //     field: \"approvedstatus\",\r\n      //     filter: true,\r\n      //     width: 100,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return params.value === \"true\" ? (\r\n      //         <div className=\"badge badge-pill badge-success\">\r\n      //           {params.data.approvedstatus}\r\n      //         </div>\r\n      //       ) : params.value === \"false\" ? (\r\n      //         <div className=\"badge badge-pill badge-warning\">\r\n      //           {params.data.approvedstatus}\r\n      //         </div>\r\n      //       ) : null;\r\n      //     },\r\n      //   },\r\n\r\n      //   {\r\n      //     headerName: \"Status\",\r\n      //     field: \"status\",\r\n      //     filter: true,\r\n      //     width: 100,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return params.value === \"Online\" ? (\r\n      //         <div className=\"badge badge-pill badge-success\">\r\n      //           {params.data.status}\r\n      //         </div>\r\n      //       ) : params.value === \"Offline\" ? (\r\n      //         <div className=\"badge badge-pill badge-warning\">\r\n      //           {params.data.status}\r\n      //         </div>\r\n      //       ) : null;\r\n      //     },\r\n      //   },\r\n      {\r\n        headerName: \"Action\",\r\n        field: \"sortorder\",\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/userride/viewUserRide/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              /> */}\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/astrology/editAstrologer/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  runthisfunction = (id) => {\r\n    console.log(id);\r\n    axiosConfig\r\n      .get(`/user/delGalleryvideo/${id}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  async componentDidMount() {\r\n    let astroId = localStorage.getItem(\"astroId\");\r\n\r\n    axiosConfig\r\n      .get(`/admin/get_astroGallery/${astroId}`)\r\n      .then((res) => {\r\n        console.log(\"images\", res.data.data);\r\n        this.setState({ rowData: res.data.data });\r\n\r\n        // this.setState({ Images: res.data?.data?.images });\r\n        // this.setState({ Videos: res.data?.data?.videos });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // let { id } = this.props.match.params;\r\n\r\n    // await axios\r\n    //   .get(`http://3.108.185.7:4000/user/view_onecust/${id}`)\r\n    //   .then((response) => {\r\n    //     let rowData = response.data.data;\r\n    //     console.log(rowData);\r\n    //     this.setState({ rowData });\r\n    //   });\r\n    // await axiosConfig\r\n    //   .get(`admin/intekListByastro/${astroId}`)\r\n    //   .then((response) => {\r\n    //     let rowData = response.data.data;\r\n    //     console.log(rowData);\r\n    //     // this.setState({ rowData });\r\n    //   });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Upload Gallary\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"Gallary\"\r\n        />\r\n\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Your Uploads\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\" btn btn-success float-right\"\r\n                        onClick={\r\n                          () => history.push(\"/uploadgallary\")\r\n                          // history.push(\"/app/astrology/addAstrologer\")\r\n                        }\r\n                      >\r\n                        Add Your gallary\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      {/* <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UploadMain;\r\n"],"sourceRoot":""}