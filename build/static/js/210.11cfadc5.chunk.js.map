{"version":3,"sources":["views/apps/astrochat/YourliveStreamone.js"],"names":["YourliveStreamone","useState","videoCall","setVideoCall","channelNamecreated","setchannelName","Status","setStatus","Token","setToken","Addcall","setAddcall","rtcProps","appId","dualStreamMode","channel","token","localStorage","getItem","uid","role","callbacks","EndCall","window","location","reload","useEffect","astroid","console","log","axiosConfig","get","then","res","data","channelName","catch","err","lg","md","sm","className","onClick","e","preventDefault","payload","astroAccount","post","setItem","removeItem","handlestatus","color","check","value","target","name","type","style","display","width","height"],"mappings":"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","file":"static/js/210.11cfadc5.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport AgoraUIKit from \"agora-react-uikit\";\r\n\r\nimport \"./../../../assets/scss/video.scss\";\r\nimport Customvideo from \"./Customvideo\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport VideoCalls from \"./VideoCalls\";\r\n\r\nfunction YourliveStreamone() {\r\n  const [videoCall, setVideoCall] = useState(false);\r\n  const [channelname, setchannel] = useState(\"\");\r\n  const [channelNamecreated, setchannelName] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [Token, setToken] = useState(\"\");\r\n  const [Addcall, setAddcall] = useState(false);\r\n\r\n  const [view, setview] = useState(false);\r\n  const [listofchannel, setlistofchannel] = useState();\r\n\r\n  const rtcProps = {\r\n    // Pass your App ID here.\r\n    appId: \"7d1f07c76f9d46be86bc46a791884023\",\r\n\r\n    // enableVideo: true,\r\n    dualStreamMode: 0,\r\n\r\n    // Set the channel name.\r\n    channel: channelNamecreated,\r\n    // channel: \"anujesh\",\r\n    // Pass your temp token here.\r\n    // token:\r\n    //   \"007eJxTYEg1WKq8YNrZq7Hry+t1pN+/dWLIDZotUv3YuP3lGv0TjsIKDOYphmkG5snmZmmWKSZmSakWZknJJmaJ5paGFhYmBkbGfocSUxoCGRmC7M+xMjJAIIjPzpCYV5qVWpzBwAAAcZYfjg==\",\r\n    token: Token || localStorage.getItem(\"astrotokenforvideocall\"),\r\n\r\n    // Set the user ID.\r\n    uid: 1,\r\n    // Set the user role\r\n    // role: \"host\",\r\n    role: \"Audience\",\r\n  };\r\n  const callbacks = {\r\n    EndCall: () => {\r\n      window.location.reload();\r\n      setVideoCall(false);\r\n    },\r\n  };\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   const astroid = localStorage.getItem(\"astroId\");\r\n\r\n  //   axiosConfig\r\n  //     .post(`/user/add_VideoChannel`, {\r\n  //       astroid: astroid,\r\n  //       channelName: channelname,\r\n  //     })\r\n  //     .then((res) => {\r\n  //       setchannel(\"\");\r\n  //       swal(\"Channel Created Successfully\");\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  const handlestatus = (e) => {\r\n    // window.location.replace(\"/livestream\");\r\n    e.preventDefault();\r\n    const astroid = localStorage.getItem(\"astroId\");\r\n\r\n    let payload = {\r\n      astroAccount: astroid,\r\n    };\r\n    if (Status === \"Active\") {\r\n      axiosConfig\r\n        .post(`/user/astroVideoCall`, payload)\r\n        .then((res) => {\r\n          console.log(res.data.astroAccount);\r\n          setToken(res.data.astroAccount);\r\n          localStorage.setItem(\"astrotokenforvideocall\", res.data.astroAccount);\r\n          setAddcall(true);\r\n\r\n          // setVideoCall(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    if (Status === \"Deactive\") {\r\n      localStorage.removeItem(\"astrotokenforvideocall\");\r\n      setAddcall(false);\r\n      window.location.reload();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const astroid = localStorage.getItem(\"astroId\");\r\n    console.log(astroid);\r\n\r\n    axiosConfig\r\n      // .get(`/user/getoneChannl/644fae265f6b65e11a4bdbd7`)\r\n      .get(`user/channelList/${astroid}`)\r\n      .then((res) => {\r\n        console.log(res.data?.data[0]?.channelName);\r\n        setchannelName(res.data?.data[0]?.channelName);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row>\r\n          {/* <VideoCalls /> */}\r\n          <Col lg=\"4\" md=\"4\" sm=\"4\">\r\n            <div className=\"container mt-2 mb-1\">\r\n              <Button onClick={(e) => handlestatus(e)} color=\"success\">\r\n                Active liveStream\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"container mt-1 mb-1\">\r\n              <Row>\r\n                <Col className=\"mt-1\">\r\n                  <FormGroup check>\r\n                    <Input\r\n                      value=\"Active\"\r\n                      onClick={(e) => {\r\n                        setStatus(e.target.value);\r\n                      }}\r\n                      name=\"radio1\"\r\n                      type=\"radio\"\r\n                    />{\" \"}\r\n                    <Label check>Online</Label>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col className=\"mt-1\">\r\n                  <FormGroup check>\r\n                    <Input\r\n                      value=\"Deactive\"\r\n                      onClick={(e) => setStatus(e.target.value)}\r\n                      name=\"radio1\"\r\n                      type=\"radio\"\r\n                    />{\" \"}\r\n                    <Label check>Offline</Label>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <div className=\"container mt-1 mb-1\">\r\n            {/* <div style={{ display: \"flex\", width: \"75vw\", height: \"80vh\" }}>\r\n              <AgoraUIKit rtcProps={rtcProps} callbacks={callbacks} />\r\n            </div> */}\r\n            {videoCall && Status === \"Active\" ? (\r\n              <div style={{ display: \"flex\", width: \"75vw\", height: \"80vh\" }}>\r\n                <AgoraUIKit rtcProps={rtcProps} callbacks={callbacks} />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {Addcall === true ? (\r\n                  <>\r\n                    <Button onClick={() => setVideoCall(true)} color=\"success\">\r\n                      liveStream Now\r\n                    </Button>\r\n                  </>\r\n                ) : null}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YourliveStreamone;\r\n"],"sourceRoot":""}