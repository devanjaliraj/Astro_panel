{"version":3,"sources":["views/apps/astrochat/VideoAstroMain.js"],"names":["i","VideoAstroMain","state","rowData","paginationPageSize","currenPageSize","getPageSize","channelbuttonshow","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","channelName","className","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","channellist","astroid","localStorage","getItem","console","log","axiosConfig","get","then","res","setState","catch","err","response","onGridReady","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","status","swal","error","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","render","history","push","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/170.75bf2de8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../history\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown, CloudLightning } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass VideoAstroMain extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    channelbuttonshow: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 200,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Channel Name\",\r\n        field: \"channelName\",\r\n        filter: true,\r\n        width: 300,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params?.data?.channelName}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Action\",\r\n        field: \"sortorder\",\r\n        width: 180,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    // onClick={() =>\r\n                    //   history.push(\r\n                    //     `/app/userride/viewUserRide/${params.data._id}`\r\n                    //   )\r\n                    // }\r\n                  />\r\n                )}\r\n              /> */}\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    // onClick={() =>\r\n                    //   history.push(\r\n                    //     `/app/astrology/editAstrologer/${params.data._id}`\r\n                    //   )\r\n                    // }\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"email\t\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.userid?.email}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Mobile No.\",\r\n      //   field: \"mobile\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.userid?.mobile}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Gender\",\r\n      //   field: \"gender\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.gender}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"DOB\",\r\n      //   field: \"dob\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.dob}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Time\",\r\n      //   field: \"date_of_time\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.date_of_time}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Birth Place\",\r\n      //   field: \"birthPlace\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.birthPlace}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Birth Place\",\r\n      //   field: \"birthPlace\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.birthPlace}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"Marital Status\",\r\n      //   field: \"marital_status\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.marital_status}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Occupation\",\r\n      //   field: \"occupation\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.occupation}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Topic Of concern \",\r\n      //   field: \"topic_of_cnsrn\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.topic_of_cnsrn}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Your Topic Of concern \",\r\n      //   field: \"entertopic_of_cnsrn\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.entertopic_of_cnsrn}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      //   {\r\n      //     headerName: \"Status\",\r\n      //     field: \"approvedstatus\",\r\n      //     filter: true,\r\n      //     width: 100,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return params.value === \"true\" ? (\r\n      //         <div className=\"badge badge-pill badge-success\">\r\n      //           {params.data.approvedstatus}\r\n      //         </div>\r\n      //       ) : params.value === \"false\" ? (\r\n      //         <div className=\"badge badge-pill badge-warning\">\r\n      //           {params.data.approvedstatus}\r\n      //         </div>\r\n      //       ) : null;\r\n      //     },\r\n      //   },\r\n\r\n      //   {\r\n      //     headerName: \"Status\",\r\n      //     field: \"status\",\r\n      //     filter: true,\r\n      //     width: 100,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return params.value === \"Online\" ? (\r\n      //         <div className=\"badge badge-pill badge-success\">\r\n      //           {params.data.status}\r\n      //         </div>\r\n      //       ) : params.value === \"Offline\" ? (\r\n      //         <div className=\"badge badge-pill badge-warning\">\r\n      //           {params.data.status}\r\n      //         </div>\r\n      //       ) : null;\r\n      //     },\r\n      //   },\r\n      // {\r\n      //   headerName: \"Action\",\r\n      //   field: \"sortorder\",\r\n      //   width: 100,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         {/* <Route\r\n      //           render={({ history }) => (\r\n      //             <Eye\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"green\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/userride/viewUserRide/${params.data._id}`\r\n      //                 )\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         /> */}\r\n      //         {/* <Route\r\n      //           render={({ history }) => (\r\n      //             <Edit\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"blue\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/astrology/editAstrologer/${params.data._id}`\r\n      //                 )\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         /> */}\r\n      //         {/* <Trash2\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"red\"\r\n      //           onClick={() => {\r\n      //             let selectedData = this.gridApi.getSelectedRows();\r\n      //             this.runthisfunction(params.data._id);\r\n      //             this.gridApi.updateRowData({ remove: selectedData });\r\n      //           }}\r\n      //         /> */}\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  channellist = () => {\r\n    const astroid = localStorage.getItem(\"astroId\");\r\n    console.log(astroid);\r\n    axiosConfig\r\n      .get(`user/channelList/${astroid}`)\r\n      .then((res) => {\r\n        console.log(res.data.data[0]?.channelName);\r\n        this.setState({ channelbuttonshow: res.data.data[0]?.channelName });\r\n        let rowData = res.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n      });\r\n  };\r\n  async componentDidMount() {\r\n    this.channellist();\r\n\r\n    // let { id } = this.props.match.params;\r\n\r\n    // await axios\r\n    //   .get(`http://3.108.185.7:4000/user/view_onecust/${id}`)\r\n    //   .then((response) => {\r\n    //     let rowData = response.data.data;\r\n    //     console.log(rowData);\r\n    //     this.setState({ rowData });\r\n    //   });\r\n    // let astroId = localStorage.getItem(\"astroId\");\r\n    // await axiosConfig\r\n    //   .get(`admin/intekListByastro/63a5a63c2ca20d31009ebf02`)\r\n    //   .then((response) => {\r\n    //     let rowData = response.data.data;\r\n    //     console.log(rowData);\r\n    //     this.setState({ rowData });\r\n    //   });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/user/dltVideoChannl/${id}`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        if (response.data.status === true) {\r\n          this.channellist();\r\n          swal(\"Deleted sucessfully\");\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <div>\r\n          <Breadcrumbs\r\n            breadCrumbTitle=\"Videocall\"\r\n            breadCrumbParent=\"Home\"\r\n            breadCrumbActive=\"Videocall\"\r\n          />\r\n\r\n          <Row className=\"app-user-list\">\r\n            <Col sm=\"12\"></Col>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <Row className=\"m-2\">\r\n                  <Col>\r\n                    <h1 sm=\"6\" className=\"float-left\">\r\n                      Your Channel\r\n                    </h1>\r\n                  </Col>\r\n                  <Col>\r\n                    {this.state.channelbuttonshow == \"\" ||\r\n                    this.state.channelbuttonshow == null ? (\r\n                      <>\r\n                        <Route\r\n                          render={({ history }) => (\r\n                            <Button\r\n                              className=\" btn btn-success float-right\"\r\n                              onClick={\r\n                                () => history.push(\"/videocall\")\r\n                                // history.push(\"/app/astrology/addAstrologer\")\r\n                              }\r\n                            >\r\n                              Add Your Channel\r\n                            </Button>\r\n                          )}\r\n                        />\r\n                      </>\r\n                    ) : null}\r\n                  </Col>\r\n                </Row>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default VideoAstroMain;\r\n"],"sourceRoot":""}